{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_jsxs","children","this","props","accountBalance","Component","Home","_jsx","src","alt","Link","to","UserProfile","userName","memberSince","LogIn","_this","call","handleChange","e","updatedUser","_objectSpread","state","user","target","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","Redirect","onSubmit","type","name","defaultValue","onChange","Credits","_ref","credits","addCredit","_useState","useState","description","amount","_useState2","_slicedToArray","newCredit","setNewCredit","parseFloat","toFixed","map","credit","index","date","slice","creditToAdd","Date","toISOString","split","placeholder","Debits","debits","addDebit","newDebit","setNewDebit","debit","debitToAdd","App","logInInfo","newUser","currentUser","calculateAccountBalance","creditList","reduce","acc","debitList","newAmount","concat","_toConsumableArray","newAccountBalance","_this2","fetch","then","response","json","data","creditsFromAPI","item","catch","error","console","debitsFromAPI","_this3","Router","basename","Route","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8988e82d.chunk.js","sourcesContent":["/*==================================================\r\nsrc/components/AccountBalance.js\r\n\r\nThe AccountBalance component displays account balance. It is included in other page views.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\n\r\nclass AccountBalance extends Component {\r\n  // Display account balance\r\n  render() {\r\n    return (\r\n      <div>\r\n        Balance: {this.props.accountBalance}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountBalance;","/*==================================================\r\nsrc/components/Home.js\r\n\r\nThe Home component is used to demonstrate the use of Link.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport AccountBalance from './AccountBalance';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\r\n\r\n        <h1>Bank of React</h1>\r\n\r\n        <Link to=\"/userProfile\">User Profile</Link>\r\n        <br/>\r\n        <Link to=\"/login\">Login</Link>\r\n        <br/>\r\n        <Link to=\"/credits\">Credits</Link>\r\n        <br/>\r\n        <Link to=\"/debits\">Debits</Link>\r\n        <br/><br/>\r\n        <AccountBalance accountBalance={this.props.accountBalance}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","/*==================================================\r\nsrc/components/UserProfile.js\r\n\r\nThe UserProfile component is used to demonstrate the use of Route and Link.\r\nNote: You don't need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass UserProfile extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>User Profile</h1>\r\n\r\n        <div>Username: {this.props.userName}</div>\r\n        <div>Member Since: {this.props.memberSince}</div>\r\n        <br/>\r\n        <Link to=\"/\">Return to Home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;","/*==================================================\r\nsrc/components/Login.js\r\n\r\nThe LogIn component is used to demonstrate the use of Redirect.\r\nNote: You don't need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass LogIn extends Component {\r\n  constructor (props) {  // Create and initialize state\r\n    super(props)\r\n    this.state = {\r\n      user: {\r\n        //userName: '',\r\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\r\n        password: ''\r\n      },\r\n      redirect: false  // Redirect property used to trigger Redirect\r\n    }\r\n  }\r\n\r\n  // When User Name input is changed, capture the new input value and update state\r\n  handleChange = (e) => {\r\n    const updatedUser = {...this.state.user};  // Create an object for state\r\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\r\n    this.setState({user: updatedUser})  // Update state with object values\r\n  }\r\n\r\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\r\n    this.setState({redirect: true})  // Update state to trigger Redirect\r\n  }\r\n  \r\n  render () {\r\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\r\n    if (this.state.redirect) {  \r\n      return (<Redirect to=\"/userProfile\"/>);\r\n    }\r\n\r\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        \r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label>User Name</label>\r\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\r\n          </div>\r\n          <div>\r\n            <label>Password</label>\r\n            <input type=\"password\" name=\"password\" />\r\n          </div>\r\n          <button>Log In</button>\r\n        </form>  \r\n        <br/>\r\n        <Link to=\"/\">Return to Home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogIn;","/*==================================================\r\nsrc/components/Credits.js\r\n\r\nThe Credits component contains information for Credits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Credits = ({ credits, addCredit, accountBalance }) => {\r\n  // Local state for the form input\r\n  const [newCredit, setNewCredit] = useState({ description: \"\", amount: 0 });\r\n\r\n  // Function to handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Create a new credit object with the current date\r\n    const creditToAdd = {\r\n      ...newCredit,\r\n      date: new Date().toISOString().split(\"T\")[0], // Format: yyyy-mm-dd\r\n      amount: parseFloat(newCredit.amount).toFixed(2) // Rounded to 2 decimal places\r\n    };\r\n    // Call the addCredit function passed as a prop\r\n    addCredit(creditToAdd);\r\n    // Reset the form\r\n    setNewCredit({ description: \"\", amount: 0 });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Credits</h1>\r\n      {/* Display Account Balance */}\r\n      <div>Account Balance: ${parseFloat(accountBalance).toFixed(2)}</div>  \r\n      \r\n      {/* Credits List */}\r\n      <ul>\r\n        {credits.map((credit, index) => (\r\n          <li key={index}>\r\n            {credit.description} - ${parseFloat(credit.amount).toFixed(2)} - {credit.date.slice(0, 10)}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {/* Add Credit Form */}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Description\"\r\n          value={newCredit.description}\r\n          onChange={(e) => setNewCredit({ ...newCredit, description: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Amount\"\r\n          value={newCredit.amount}\r\n          onChange={(e) => setNewCredit({ ...newCredit, amount: e.target.value })}\r\n        />\r\n        <button type=\"submit\">Add Credit</button>\r\n      </form>\r\n\r\n      <br/>\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Credits;\r\n","/*==================================================\r\nsrc/components/Debits.js\r\n\r\nThe Debits component contains information for Debits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Debits = ({ debits, addDebit, accountBalance }) => {\r\n  // Local state for the form input\r\n  const [newDebit, setNewDebit] = useState({ description: \"\", amount: 0 });\r\n\r\n  // Function to handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Create a new debit object with the current date\r\n    const debitToAdd = {\r\n      ...newDebit,\r\n      date: new Date().toISOString().split(\"T\")[0],\r\n      amount: parseFloat(newDebit.amount).toFixed(2)\r\n    };\r\n\r\n    addDebit(debitToAdd);\r\n    setNewDebit({ description: \"\", amount: 0 });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Debits</h1>\r\n\r\n      <div>Account Balance: ${parseFloat(accountBalance).toFixed(2)}</div>\r\n\r\n      <ul>\r\n        {debits.map((debit, index) => (\r\n          <li key={index}>\r\n            {debit.description} - ${parseFloat(debit.amount).toFixed(2)} - {debit.date.slice(0, 10)}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {/* Add Debit Form */}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Description\"\r\n          value={newDebit.description}\r\n          onChange={(e) => setNewDebit({ ...newDebit, description: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Amount\"\r\n          value={newDebit.amount}\r\n          onChange={(e) => setNewDebit({ ...newDebit, amount: e.target.value })}\r\n        />\r\n        <button type=\"submit\">Add Debit</button>\r\n      </form>\r\n\r\n      <br />\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Debits;\r\n\r\n","/*==================================================\r\nsrc/App.js\r\n\r\nThis is the top-level component of the app.\r\nIt contains the top-level state.\r\n==================================================*/\r\nimport React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\n// Import other components\r\nimport Home from './components/Home';\r\nimport UserProfile from './components/UserProfile';\r\nimport LogIn from './components/Login';\r\nimport Credits from './components/Credits';\r\nimport Debits from './components/Debits';\r\n\r\nclass App extends Component {\r\n  constructor() {  // Create and initialize state\r\n    super();\r\n    this.state = {\r\n      accountBalance: 1234567.89,\r\n      creditList: [],\r\n      debitList: [],\r\n      currentUser: {\r\n        userName: 'Joe Smith',\r\n        memberSince: '11/22/99',\r\n      }\r\n    };\r\n  }\r\n\r\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\r\n  mockLogIn = (logInInfo) => {\r\n    const newUser = { ...this.state.currentUser };\r\n    newUser.userName = logInInfo.userName;\r\n    this.setState({ currentUser: newUser })\r\n  }\r\n\r\n  calculateAccountBalance = () => {\r\n    const totalCredits = this.state.creditList.reduce((acc, credit) => acc + parseFloat(credit.amount), 0);\r\n    const totalDebits = this.state.debitList.reduce((acc, debit) => acc + parseFloat(debit.amount), 0);\r\n    return totalCredits - totalDebits;  // Return as float\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Fetch credit data from API and update state\r\n    fetch('https://johnnylaicode.github.io/api/credits.json')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const creditsFromAPI = data.map(item => ({\r\n          ...item,\r\n          amount: parseFloat(item.amount).toFixed(2)\r\n        }));\r\n        this.setState({ creditList: creditsFromAPI }, () => {\r\n          const newAccountBalance = this.calculateAccountBalance();\r\n          this.setState({ accountBalance: parseFloat(newAccountBalance).toFixed(2) });\r\n        });\r\n      })\r\n      .catch(error => console.error('Error fetching credits:', error));\r\n\r\n    // Fetch debit data from API and update state\r\n    fetch('https://johnnylaicode.github.io/api/debits.json')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const debitsFromAPI = data.map(item => ({\r\n          ...item,\r\n          amount: parseFloat(item.amount)\r\n        }));\r\n        this.setState({ debitList: debitsFromAPI }, () => {\r\n          const newAccountBalance = this.calculateAccountBalance();\r\n          this.setState({ accountBalance: parseFloat(newAccountBalance).toFixed(2) });\r\n        });\r\n      })\r\n      .catch(error => console.error('Error fetching debits:', error));\r\n  }\r\n\r\n  addCredit = (credit) => {\r\n    const newAmount = parseFloat(credit.amount);\r\n    const newCredit = { ...credit, amount: newAmount };\r\n\r\n    this.setState({ creditList: [...this.state.creditList, newCredit] }, () => {\r\n      const newAccountBalance = this.calculateAccountBalance();\r\n      this.setState({ accountBalance: newAccountBalance });\r\n    });\r\n  }\r\n\r\n  addDebit = (debit) => {\r\n    const newAmount = parseFloat(debit.amount);\r\n    const newDebit = { ...debit, amount: newAmount };\r\n\r\n    this.setState({ debitList: [...this.state.debitList, newDebit] }, () => {\r\n      const newAccountBalance = this.calculateAccountBalance();\r\n      this.setState({ accountBalance: newAccountBalance });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // Create React elements and pass input props to components\r\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\r\n    const UserProfileComponent = () => (\r\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\r\n    )\r\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\r\n    const CreditsComponent = () => (\r\n      <Credits\r\n        credits={this.state.creditList}\r\n        addCredit={this.addCredit}\r\n        accountBalance={this.state.accountBalance}\r\n      />\r\n    )\r\n    const DebitsComponent = () => (\r\n      <Debits\r\n        debits={this.state.debitList}\r\n        addDebit={this.addDebit}\r\n        accountBalance={this.state.accountBalance}\r\n      />\r\n    )\r\n\r\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\r\n    return (\r\n      <Router basename=\"/assignment3-bank-of-react\">\r\n        <div>\r\n          <Route exact path=\"/\" render={HomeComponent} />\r\n          <Route exact path=\"/userProfile\" render={UserProfileComponent} />\r\n          <Route exact path=\"/login\" render={LogInComponent} />\r\n          <Route exact path=\"/credits\" render={CreditsComponent} />\r\n          <Route exact path=\"/debits\" render={DebitsComponent} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/*==================================================\r\nsrc/index.js\r\n\r\nThis file renders the top-level component App which contains all components of the app).\r\n==================================================*/\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}